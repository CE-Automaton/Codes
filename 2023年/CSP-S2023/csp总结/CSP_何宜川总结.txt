T1 难度比较低，差不多普及组 T1 到 T2 难度。
写完了发现大样例比较小，挺担心挂分，不过正解就是暴力不太好写对拍，于是自己稍微造了几组数据大概测了一下就跳过了。
但是各种问题导致 T1 写了半个小时，导致我后面时间不太够用了。

T2 看出来和之前考过的一道题几乎一样了，但是那道题是矩阵，而且原题难度也不低。觉得 T2 应该不会至于那么难就先跳过了。

看了 T3 发现是大模拟，觉得时间还充裕就果断开写。
不过花的时间有点太久了，花了差不多 1.5h 才写完。

回去看 T2，发现这个题貌似更简单可以分治+哈希表做。
细细算了算发现分治是一个 log 加上超大常数的，被 APIO 5e5 卡单 log 吓到了，于是就写了之前考试矩阵的做法。
这个题花了大约一个小时多一点。（主要是分析哪个做法更优花的时间比较长）

开 T4 只剩差不多 45 分钟了。一眼就会了，不过我需要树上问题序列化上个线段树代码量比较大怕写不完。
于是为了稳妥起见考虑先写 ∑子树大小 的做法，我认为这个做法如果调出来我可以在 10 分钟内改成正解做法。
但是可惜直到赛前 2 分钟才调出来就没来得及加线段树，匆匆忙忙拼了个链的分就走人了。

估计得分 100+100+100+55=355
民间测试数据得分：
小图零 70+100+100+40=310
云斗 80+100+100+40=320
洛谷 60+100+100+40=300。
发现 T1 环形锁没有取模，最多可能挂到 30，T4 预期能过的菊花图被卡了。

这次考试主要就是在调试过程中（主要为 T1、T3 和 T4）犯了很多错误导致代码时间过长，最终时间不够。
而期望得分中 T1 细节没处理完，不太好写对拍于是导致挂分。这是比较严重的失误，我应当尽量更加细心地去完成简单题的代码。
T4 稍微想复杂了一点，虽然我的做法正确但是实际上我需要维护的东西可以用更加简单的方法完成（不需要加线段树）。
如果我赛时就这样写也许足够我在赛时通过这道题？

在之前的模拟赛中，我做题十分激进，希望能够尽量多的做出正解，暴力分会比较少。
因此，我养成了不好的比赛习惯。这在正式比赛中是不可取的。
所以我需要改正，把模拟赛当成正式比赛对待。我需要合理分配时间，保证总分达到自己最高的水平。
正如周老师所说的，模拟赛锻炼的是得分能力，做题能力可以在比赛后锻炼。我以后要听从周老师的建议认真对待比赛，多努力得分。

我吸取了这次 CSP 的教训：
在考试中，要细心读题、想题、做题、调题、拍题。
写代码时尽量不犯低级错误，学习快速调试代码，争取不在以后的考试中犯类似的错误。
要多得分，时间不够就努力打暴力，按照最稳妥的方案做题。这次 CSP 就是因此最后一题我能够获得一定的分数，不至于考得太低。