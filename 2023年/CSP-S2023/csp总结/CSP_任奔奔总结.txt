首先开始考试是先略看了一遍题，大概的对题目进行了一个评估。

T1 拿到手看到数据范围比较小，感觉像是暴力，然后就看下一题了
T2 很眼熟，发现是原题，统计序列可以用分治，感觉应该不会很麻烦
T3 看着像是大模拟，不一定能写得出来，可能会浪费一整场的时间，所以放到最后写
T4 扩展的形式很眼熟，一般这种题都是通过广搜的形式，感觉不会很难

T1反复确定题目之后很快就写完了，开始看T2。
T2想了想大概可以用分治之后就开始推逆矩阵，推了两个小时没有推出来。
实际上这里的失误很严重，首先在原来改题的时候推逆矩阵的部分我是没有自己进行手推的。
直接向同学问了一个手玩出来的式子就做完了，这时候的态度太轻视，因为我自认为题的重点不在推逆矩阵的部分。
同时也是对自己太自信了，想的是2X2的式子规律比较简单，自己手玩的话也能玩出来，同时自己也会用高斯消元求逆矩阵，那问题应该不大。

实际上手玩没有玩出来，而高斯消元的方法也记错了。
问题在于对于线性代数不是很熟悉，对于模板的理解没有理解清楚，只记住了操作方式，确没有记住消元的本质是在干什么，所以写出来也不对。
而做的时候也太聚焦了，在做一段时间之后应该尝试往其它的方向上面思考，而不是死磕在一个地方。

其实这题只要随便向其它方向想一想就能规避逆矩阵，但是我却没有往做法上面去改进，而是死磕在一个工具上面。

但是这也说明了平时改题的方式有一些问题，实际上原题的std有一种没有什么道理确恰好能适用这题来求逆矩阵的方法。
但是我没有去看，而是直接通过比较寻常的方法来求。但是我也没有记住这个方法，甚至不知道，以后考试后我会看看别人的代码，有什么不一样的地方。

推了很久T2之后感觉时间不多了，赶紧打了暴力走人。
剩下两题中感觉T4可能比较好写，T3大模拟部分分可能没那么好拿。

仔细看了看T4，思路其实很快就出来了，先二分答案，然后就能知道每个位置最晚能多久到，最后对每一个子树求一个最小值之后贪心就好了。

然后感觉是因为前面写T2花了太久了，写T4的时候小错误很多。
同时平时做题的时候对于数字不太敏感，很多范围开得比较随意，对于常数也不太重视，对于所有的都用了int128，并且是最后极限调出来的，没时间测试，导致最后被卡常了。

说明平时做题，考试的时候应该要严谨一些，会节省很多调试的细节和意外的风险。

看题:20min
T1 10min
T2 2h15min
T3 0min
T4 1h15min

感觉这几周都处在一个比较紧张的状态上，有些累，精神可能不太集中。
并且发现在平时的考试中会发现简单题没做出来的情况，一般的都是想复杂了。
感觉问题出在思考方向和总结上面，经常将题目转化为能做，但是很复杂比较熟悉的问题上，导致一直卡在转化后的问题。
一般这种题要么换方向，要么就是有特殊性质，而总结的时候只是写了一道题目该怎么去做，而没有和同类型的题目去比较，将相似的题目拿去分析原因，所以就导致转化复杂的情况。
还有就是平时有时候做题只是想了，没有去写代码，导致对于很多东西不太熟悉。

加下来几周的计划是除了平时的模拟赛之外，多熟悉一下会，但是写得不多的知识点。
重新梳理一下自己的总结，防止出现类似的题会写不出来或者是将简单题转化为难题的情况，同时改进一下自己的做题习惯。
目标是在noip把在自己能力范围内的分全部拿到，拿个一等，防止出现会但写不了，或者是能会但是没想的情况，尽量减少意外的发生。